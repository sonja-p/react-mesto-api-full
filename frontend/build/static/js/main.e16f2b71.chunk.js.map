{"version":3,"sources":["images/logo.svg","components/Header.js","components/Register.js","components/InfoTooltip.js","components/ProtectedRoute.js","components/Login.js","contexts/CurrentUserContext.js","components/Card.js","components/Spinner.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","utils/api.js","utils/auth.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","handleClick","buttonName","loggedIn","email","className","src","logo","alt","onClick","console","log","Register","handleRegister","handleSignIn","useState","password","data","setData","handleChange","e","target","name","value","onSubmit","preventDefault","id","type","placeholder","onChange","required","autoComplete","to","InfoTooltip","isOpen","onClose","message","text","ProtectedRoute","Component","component","props","Login","handleLogin","handleSignUp","CurrentUserContext","React","createContext","Card","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","link","onCardClick","onCardLike","length","onCardDelete","Spinner","Main","onEditProfile","onAddPlace","onEditAvatar","cards","isLoading","handleLogout","avatar","about","map","card","Footer","Date","getFullYear","PopupWithForm","title","children","submitButtonTitle","ImagePopup","EditProfilePopup","onUpdateUser","setName","description","setDescription","useEffect","minLength","maxLength","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","current","ref","AddPlacePopup","setLink","api","options","this","_url","baseUrl","_headers","headers","res","ok","json","Promise","reject","status","fetch","then","_parseResponse","method","body","JSON","stringify","inputData","authorization","auth","_checkResponse","response","register","authorize","getContent","token","Authorization","_token","App","setCurrentUser","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isRemoveCardPopupOpen","setIsRemoveCardPopupOpen","isInfoTooltipPopupOpen","setIsInfoTooltipPopupOpen","selectedCard","setSelectedCard","isImagePopupOpen","setIsImagePopupOpen","setIsLoading","setLoggedIn","userData","setUserData","setMessage","history","useHistory","handleError","error","push","localStorage","getItem","catch","checkToken","getUserInfo","err","closeAllPopups","setCards","getInitialCards","finally","Provider","path","setItem","onRemoveCard","deleteLike","addLike","newCard","state","c","handleDeleteCard","filter","removeItem","newProfileData","setUserInfo","addNewCard","setUserAvatar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e16f2b71.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.5f3664ca.svg\";","import logo from \"../images/logo.svg\";\r\n\r\nfunction Header({ handleClick, buttonName, loggedIn, email }) {\r\n  return (\r\n    <header className=\"header page__header\">\r\n      \r\n      <img src={logo} alt=\"Логотип Место Россия\" className=\"header__logo\" />\r\n      <div className=\"header__container\">\r\n        {loggedIn && <p className=\"header__email\">{email}</p>}\r\n        <button onClick={handleClick} className=\"button header__button\">\r\n          {buttonName}\r\n        </button>\r\n      </div>\r\n      <button onClick={() => console.log('navbar')} className=\"button header__menu\"></button>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport Header from \"./Header\";\r\n\r\nconst Register = ({ handleRegister, loggedIn, handleSignIn }) => {\r\n  const [data, setData] = useState({\r\n    password: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setData({\r\n      ...data,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { password, email } = data;\r\n    handleRegister({ password, email });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        handleClick={handleSignIn}\r\n        buttonName={\"Войти\"}\r\n        loggedIn={loggedIn}\r\n      />\r\n      <div className=\"register page__register\">\r\n        <h2 className=\"register__title\">Регистрация</h2>\r\n        <form className=\"register__form\" onSubmit={handleSubmit}>\r\n          <input\r\n            className=\"register__input\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            onChange={handleChange}\r\n            value={data.email || \"\"}\r\n            required\r\n          />\r\n          <input\r\n            className=\"register__input\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Пароль\"\r\n            onChange={handleChange}\r\n            value={data.password || \"\"}\r\n            autoComplete=\"on\"\r\n            required\r\n          />\r\n          <button className=\"button register__button\" type=\"submit\">\r\n            Зарегистрироваться\r\n          </button>\r\n          <div className=\"register__signin\">\r\n            <p>Уже зарегистрированы?</p>\r\n            <Link to=\"login\" className=\"register__login-link\">\r\n              Войти\r\n            </Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","function InfoTooltip({ isOpen, onClose, message }) {\r\n  return (\r\n    <section className={`popup ${isOpen && \"popup_opened\"}`}>\r\n      <div className=\"popup__container\">\r\n        <div\r\n          className={`popup__tooltip-icon popup__tooltip-icon_type_${message.type}`}\r\n        ></div>\r\n        <h2 className=\"popup__title popup__title_padding-bottom_min popup__title_align_center\">\r\n          {message.text}\r\n        </h2>\r\n        <button\r\n          onClick={onClose}\r\n          className=\"button button_type_close\"\r\n          type=\"reset\"\r\n        ></button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default InfoTooltip;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ component: Component, ...props }) => {\r\n  return (\r\n    <Route>\r\n      {() =>\r\n        props.loggedIn ? <Component {...props} /> : <Redirect to=\"./sign-in\" />\r\n      }\r\n    </Route>\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import { useState } from \"react\";\r\nimport Header from \"./Header\";\r\n\r\nconst Login = ({ handleLogin, handleSignUp }) => {\r\n  const [data, setData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setData({\r\n      ...data,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!data.email || !data.password) {\r\n      return;\r\n    }\r\n    const { password, email } = data;\r\n    handleLogin({ password, email });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header handleClick={handleSignUp} buttonName={\"Регистрация\"} />\r\n      <div className=\"register page__register\">\r\n        <h2 className=\"register__title\">Вход</h2>\r\n        <form className=\"register__form\" onSubmit={handleSubmit}>\r\n          <input\r\n            className=\"register__input\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={data.email || \"\"}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <input\r\n            className=\"register__input\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Пароль\"\r\n            value={data.password || \"\"}\r\n            onChange={handleChange}\r\n            autoComplete=\"on\"\r\n            required\r\n          />\r\n          <button className=\"button register__button\" type=\"submit\">\r\n            Войти\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nexport const CurrentUserContext = React.createContext();","import { useContext } from \"react\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\r\n\r\nfunction Card(props) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n  const isOwn = props.owner._id === currentUser._id;\r\n\r\n  const cardDeleteButtonClassName = `button ${\r\n    isOwn ? \"button_type_delete-card\" : \"button_type_delete-card_disable\"\r\n  }`;\r\n\r\n  const isLiked = props.likes.some((i) => i._id === currentUser._id);\r\n\r\n  const cardLikeButtonClassName = `button ${\r\n    isLiked ? \"button_type_like_active\" : \"button_type_like\"\r\n  }`;\r\n\r\n  function handleClick() {\r\n    props.onCardClick(props);\r\n  }\r\n\r\n  function handleDeleteClick() {\r\n    props.onCardDelete(props);\r\n  }\r\n\r\n  function handleLikeClick() {\r\n    props.onCardLike(props);\r\n  }\r\n\r\n  return (\r\n    <li className=\"element\">\r\n      <img\r\n        src={props.link}\r\n        alt={props.name}\r\n        className=\"element__image\"\r\n        onClick={handleClick}\r\n      />\r\n      <h3 className=\"element__title\">{props.name}</h3>\r\n      <button\r\n        className={cardLikeButtonClassName}\r\n        type=\"button\"\r\n        onClick={handleLikeClick}\r\n      ></button>\r\n      <h3 className=\"element__likes\">{props.likes.length}</h3>\r\n      <button\r\n        className={cardDeleteButtonClassName}\r\n        type=\"button\"\r\n        onClick={handleDeleteClick}\r\n      ></button>\r\n    </li>\r\n  );\r\n}\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"../blocks/spinner/Spinner.css\";\r\n\r\nfunction Spinner() {\r\n  return <div className=\"Spinner\" />;\r\n}\r\nexport default Spinner;\r\n","import { useContext } from \"react\";\r\nimport Card from \"./Card\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\r\nimport Spinner from \"./Spinner\";\r\nimport Header from \"./Header\";\r\n\r\nfunction Main({\r\n  onEditProfile,\r\n  onAddPlace,\r\n  onEditAvatar,\r\n  onCardClick,\r\n  cards,\r\n  isLoading,\r\n  onCardLike,\r\n  onCardDelete,\r\n  handleLogout,\r\n  loggedIn,\r\n  email\r\n}) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        handleClick={handleLogout}\r\n        buttonName={\"Выйти\"}\r\n        loggedIn={loggedIn}\r\n        email={email}\r\n      />\r\n      <main className=\"content page__content\">\r\n        <section className=\"profile\">\r\n          <div className=\"profile__avatar-container\">\r\n            <img\r\n              className=\"profile__avatar\"\r\n              src={currentUser.avatar}\r\n              alt=\"Аватар пользователя\"\r\n            />\r\n            <button\r\n              onClick={onEditAvatar}\r\n              className=\"button button_type_change-avatar\"\r\n              type=\"button\"\r\n            ></button>\r\n          </div>\r\n          <div className=\"profile__info\">\r\n            <div className=\"profile__name-section\">\r\n              <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n              <button\r\n                onClick={onEditProfile}\r\n                className=\"button button_type_edit-profile\"\r\n                type=\"button\"\r\n              ></button>\r\n            </div>\r\n            <h2 className=\"profile__description\">{currentUser.about}</h2>\r\n          </div>\r\n          <button\r\n            onClick={onAddPlace}\r\n            className=\"button button_type_add-card\"\r\n            type=\"button\"\r\n          ></button>\r\n        </section>\r\n        <section className=\"elements\">\r\n          <ul className=\"elements__list\">\r\n            {isLoading ? (\r\n              <Spinner />\r\n            ) : (\r\n              cards.map((card) => (\r\n                <Card\r\n                  key={card._id}\r\n                  {...card}\r\n                  onCardClick={onCardClick}\r\n                  onCardLike={onCardLike}\r\n                  onCardDelete={onCardDelete}\r\n                />\r\n              ))\r\n            )}\r\n          </ul>\r\n        </section>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\nexport default Main;\r\n","function Footer() {\r\n  return (\r\n    <footer className=\"footer page__footer\">\r\n      <p className=\"footer__copyright\">&copy; {new Date().getFullYear()} Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\nexport default Footer;\r\n","function PopupWithForm({\r\n  name,\r\n  title,\r\n  children,\r\n  submitButtonTitle,\r\n  isOpen,\r\n  onClose,\r\n  onSubmit,\r\n}) {\r\n  return (\r\n    <section className={`popup ${isOpen && \"popup_opened\"}`}>\r\n      <form\r\n        className=\"popup__container\"\r\n        name={name}\r\n        onSubmit={onSubmit}\r\n      >\r\n        <h2 className=\"popup__title\">{title}</h2>\r\n        <>{children}</>\r\n        <button\r\n          onClick={onClose}\r\n          className=\"button button_type_close\"\r\n          type=\"reset\"\r\n        ></button>\r\n        <button className=\"button popup__save-button\" type=\"submit\">\r\n          {submitButtonTitle}\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","function ImagePopup({ card, onClose, isOpen }) {\r\n  return (\r\n    <section className={`popup popup_type_view ${isOpen && \"popup_opened\"}`}>\r\n      <div className=\"popup__view\">\r\n        <img\r\n          src={card.link}\r\n          alt={`увеличенное изображение ${card.name}`}\r\n          className=\"popup__image\"\r\n        />\r\n        <h3 className=\"popup__image-title\">{card.name}</h3>\r\n        <button\r\n          onClick={onClose}\r\n          className=\"button button_type_close\"\r\n          type=\"reset\"\r\n        ></button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;","import { useState, useContext, useEffect } from \"react\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser, isOpen]);\r\n\r\n  function handleNameChange(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  function handleDescriptionChange(e) {\r\n    setDescription(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onUpdateUser({\r\n      name,\r\n      about: description,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title=\"Редактировать профиль\"\r\n      name=\"edit-profile\"\r\n      submitButtonTitle=\"Сохранить\"\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input\r\n        className=\"popup__input\"\r\n        onChange={handleNameChange}\r\n        id=\"profile-name\"\r\n        name=\"profile-name\"\r\n        type=\"text\"\r\n        value={name || \"\"}\r\n        minLength=\"2\"\r\n        maxLength=\"40\"\r\n        required\r\n      />\r\n      <span className=\"profile-name-error popup__input-error\"></span>\r\n      <input\r\n        className=\"popup__input\"\r\n        onChange={handleDescriptionChange}\r\n        id=\"description\"\r\n        name=\"description\"\r\n        type=\"text\"\r\n        value={description || \"\"}\r\n        minLength=\"2\"\r\n        maxLength=\"200\"\r\n        required\r\n      />\r\n      <span className=\"description-error popup__input-error\"></span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditProfilePopup;\r\n","import { useRef } from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar }) {\r\n  const avatarRef = useRef();\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onUpdateAvatar(avatarRef.current.value);\r\n    avatarRef.current.value = \"\";\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title=\"Обновить аватар\"\r\n      name=\"edit-avatar\"\r\n      submitButtonTitle=\"Сохранить\"\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input\r\n        className=\"popup__input\"\r\n        ref={avatarRef}\r\n        id=\"avatar-link\"\r\n        name=\"avatar-link\"\r\n        type=\"url\"\r\n        placeholder=\"Ссылка на картинку\"\r\n        required\r\n      />\r\n      <span className=\"avatar-link-error popup__input-error\"></span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditAvatarPopup;\r\n","import PopupWithForm from \"./PopupWithForm\";\r\nimport { useState } from \"react\";\r\n\r\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [link, setLink] = useState(\"\");\r\n\r\n  function handleNameChange(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  function handleLinkChange(e) {\r\n    setLink(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    onAddPlace({\r\n      name: name,\r\n      link: link,\r\n    });\r\n\r\n    setName(\"\");\r\n    setLink(\"\");\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title=\"Новое место\"\r\n      name=\"add-place\"\r\n      submitButtonTitle=\"Создать\"\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input\r\n        className=\"popup__input\"\r\n        id=\"image-name\"\r\n        name=\"image-name\"\r\n        type=\"text\"\r\n        onChange={handleNameChange}\r\n        value={name}\r\n        placeholder=\"Название\"\r\n        minLength=\"2\"\r\n        maxLength=\"30\"\r\n        required\r\n      />\r\n      <span className=\"image-name-error popup__input-error\"></span>\r\n      <input\r\n        className=\"popup__input\"\r\n        id=\"image-link\"\r\n        name=\"image-link\"\r\n        type=\"url\"\r\n        onChange={handleLinkChange}\r\n        value={link}\r\n        placeholder=\"Ссылка на картинку\"\r\n        required\r\n      />\r\n      <span className=\"image-link-error popup__input-error\"></span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default AddPlacePopup;\r\n","class Api {\r\n    constructor(options) {\r\n        this._url = options.baseUrl;\r\n        this._headers = options.headers;\r\n    }   \r\n\r\n    _parseResponse(res) {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n\r\n    getUserInfo() {\r\n        return fetch(`${this._url}/users/me`, {\r\n            headers: this._headers\r\n        })\r\n        .then(res => this._parseResponse(res));\r\n    }\r\n\r\n    getInitialCards() {\r\n        return fetch(`${this._url}/cards`, {\r\n            headers: this._headers\r\n        })\r\n        .then(res => this._parseResponse(res));\r\n    }\r\n\r\n\r\n    setUserInfo(data) {\r\n        return fetch(`${this._url}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            //в теле — JSON с двумя свойствами — name и about. Значениями этих свойств должны быть обновлённые данные пользователя\r\n            body: JSON.stringify(data)\r\n        })\r\n        .then(res => this._parseResponse(res));\r\n    }\r\n\r\n    addNewCard(inputData) {\r\n        return fetch(`${this._url}/cards`, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: inputData.name,\r\n                link: inputData.link\r\n            })\r\n        })\r\n        .then(res => this._parseResponse(res));\r\n    }\r\n\r\n    getCardLikes() {\r\n        return fetch(`${this._url}/cards`, {\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                likes: []\r\n            })\r\n        })\r\n        .then(res => this._parseResponse(res));\r\n    }\r\n\r\n    handleDeleteCard(id) {\r\n        //Вместо cardId в URL нужно подставить свойство _id соответствующей карточки.\r\n        return fetch(`${this._url}/cards/${id}`, {\r\n            method: 'DELETE',\r\n            headers: this._headers,\r\n        })\r\n        .then(res => this._parseResponse(res));\r\n    }\r\n\r\n    addLike(id) {\r\n        //Вместо cardId в URL нужно подставить свойство _id соответствующей карточки.\r\n        return fetch(`${this._url}/cards/likes/${id}`, {\r\n            method: 'PUT',\r\n            headers: this._headers,\r\n        })\r\n        .then(res => this._parseResponse(res));\r\n    }\r\n\r\n    deleteLike(id) {\r\n        return fetch(`${this._url}/cards/likes/${id}`, {\r\n            method: 'DELETE',\r\n            headers: this._headers,\r\n        })\r\n        .then(res => this._parseResponse(res));\r\n    }\r\n\r\n    setUserAvatar(link) {\r\n        return fetch(`${this._url}/users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                avatar: `${link}`\r\n            })\r\n        })\r\n        .then(res => this._parseResponse(res));\r\n    }\r\n}\r\n\r\nconst options = {\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-22',\r\n    headers: {\r\n      authorization: '28dc5a41-c5c0-42d9-838f-76fdbd61560b',\r\n      'Content-Type': 'application/json'\r\n    }\r\n}\r\n  \r\nconst api = new Api(options);\r\n\r\nexport default api;","class Auth {\r\n  constructor(options) {\r\n    this._url = options.baseUrl;\r\n    this._token = options.token;\r\n  }\r\n\r\n  _checkResponse = (response) =>\r\n    response.ok\r\n      ? response.json()\r\n      : Promise.reject(`Ошибка: ${response.status}`);\r\n\r\n  register = (password, email) => {\r\n    return fetch(`${this._url}/signup`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        password: `${password}`,\r\n        email: `${email}`,\r\n      }),\r\n    }).then(this._checkResponse);\r\n  };\r\n\r\n  authorize = (password, email) => {\r\n    return fetch(`${this._url}/signin`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        password: `${password}`,\r\n        email: `${email}`,\r\n      }),\r\n    }).then(this._checkResponse);\r\n  };\r\n\r\n  getContent = (token) => {\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }).then(this._checkResponse);\r\n  };\r\n}\r\n\r\nconst options = {\r\n  baseUrl: \"https://auth.nomoreparties.co\",\r\n};\r\n\r\nconst auth = new Auth(options);\r\n\r\nexport default auth;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Route, Switch, useHistory, Redirect } from \"react-router-dom\";\r\nimport Register from \"./Register\";\r\nimport InfoTooltip from \"./InfoTooltip\";\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\nimport Login from \"./Login\";\r\nimport Main from \"./Main\";\r\nimport Footer from \"./Footer\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport ImagePopup from \"./ImagePopup\";\r\nimport EditProfilePopup from \"./EditProfilePopup\";\r\nimport EditAvatarPopup from \"./EditAvatarPopup\";\r\nimport AddPlacePopup from \"./AddPlacePopup\";\r\nimport api from \"../utils/api\";\r\nimport auth from \"../utils/auth\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nfunction App() {\r\n  const [currentUser, setCurrentUser] = useState({\r\n    name: \"\",\r\n    about: \"\",\r\n    avatar: \"\",\r\n    _id: \"\",\r\n  });\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\r\n  const [isRemoveCardPopupOpen, setIsRemoveCardPopupOpen] = useState(false);\r\n  const [isInfoTooltipPopupOpen, setIsInfoTooltipPopupOpen] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState({});\r\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  // устанавливаем значение null для отображения спиннера при загрузке сайта\r\n  const [loggedIn, setLoggedIn] = useState(null);\r\n  const [userData, setUserData] = useState({\r\n    _id: \"\",\r\n    email: \"\",\r\n  });\r\n  const [message, setMessage] = useState({ text: \"\", type: \"\" });\r\n\r\n  const history = useHistory();\r\n\r\n  const handleError = (error) => {\r\n    console.error(error);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [loggedIn]);\r\n\r\n  const handleRegister = ({ password, email }) => {\r\n    auth\r\n      .register(password, email)\r\n      .then((data) => {\r\n        const { _id, email } = data.data;\r\n        setUserData({ _id, email });\r\n\r\n        setIsInfoTooltipPopupOpen(true);\r\n        setMessage({\r\n          text: \"Вы успешно зарегистрировались!\",\r\n          type: \"success\",\r\n        });\r\n      })\r\n      .then(() => history.push(\"/\"))\r\n      .catch((error) => {\r\n        handleError(error);\r\n        if (error) {\r\n          setIsInfoTooltipPopupOpen(true);\r\n          setMessage({\r\n            text: \"Что-то пошло не так! Попробуйте ещё раз.\",\r\n            type: \"fail\",\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleLogin = ({ password, email }) => {\r\n    auth\r\n      .authorize(password, email)\r\n      .then((data) => {\r\n        const { token } = data;\r\n        localStorage.setItem(\"token\", token);\r\n        setLoggedIn(true);\r\n        setUserData({ email });\r\n      })\r\n      .catch(handleError);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setUserData({\r\n      _id: \"\",\r\n      email: \"\",\r\n    });\r\n    setLoggedIn(null);\r\n    localStorage.removeItem(\"token\");\r\n  };\r\n\r\n  const handleSignIn = () => {\r\n    history.push(\"/sign-in\");\r\n  };\r\n\r\n  const handleSignUp = () => {\r\n    history.push(\"/sign-up\");\r\n  };\r\n\r\n  const checkToken = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      auth\r\n        .getContent(token)\r\n        .then((data) => {\r\n          const { _id, email } = data.data;\r\n          setUserData({ _id, email });\r\n          setLoggedIn(true);\r\n        })\r\n        .catch(handleError);\r\n    } else {\r\n      setLoggedIn(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkToken();\r\n  }, [loggedIn]);\r\n\r\n  useEffect(() => {\r\n    api\r\n      .getUserInfo()\r\n      .then((data) => {\r\n        setCurrentUser(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Ошибка при загрузке информации пользователя\", err.message);\r\n      });\r\n  }, []);\r\n\r\n  const handleEditAvatarClick = () => {\r\n    setIsEditAvatarPopupOpen(true);\r\n  };\r\n\r\n  const handleEditProfileClick = () => {\r\n    setIsEditProfilePopupOpen(true);\r\n  };\r\n\r\n  const handleAddPlaceClick = () => {\r\n    setIsAddPlacePopupOpen(true);\r\n  };\r\n\r\n  const handleRemoveCardClick = () => {\r\n    setIsRemoveCardPopupOpen(true);\r\n  };\r\n\r\n  const closeAllPopups = () => {\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsRemoveCardPopupOpen(false);\r\n    setIsImagePopupOpen(false);\r\n    setIsInfoTooltipPopupOpen(false);\r\n  };\r\n\r\n  const handleCardClick = (card) => {\r\n    setSelectedCard(card);\r\n    setIsImagePopupOpen(true);\r\n  };\r\n\r\n  const handleUpdateUser = (newProfileData) => {\r\n    api\r\n      .setUserInfo(newProfileData)\r\n      .then((data) => {\r\n        setCurrentUser(data);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(\r\n          \"Ошибка при загрузке новой информации пользователя\",\r\n          err.message\r\n        );\r\n      });\r\n  };\r\n\r\n  const handleUpdateAvatar = (link) => {\r\n    api\r\n      .setUserAvatar(link)\r\n      .then((data) => {\r\n        setCurrentUser(data);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Ошибка при загрузке аватара пользователя\", err.message);\r\n      });\r\n  };\r\n\r\n  const [cards, setCards] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    api\r\n      .getInitialCards()\r\n      .then((data) => {\r\n        setCards(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Ошибка при загрузке карточек\", err.message);\r\n      })\r\n      .finally(() => setIsLoading(false));\r\n  }, []);\r\n\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n\r\n    (!isLiked ? api.addLike(card._id) : api.deleteLike(card._id))\r\n      .then((newCard) => {\r\n        setCards((state) =>\r\n          state.map((c) => (c._id === card._id ? newCard : c))\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Ошибка при постановке лайка\", err.message);\r\n      });\r\n  }\r\n\r\n  function handleCardDelete(card) {\r\n    api\r\n      .handleDeleteCard(card._id)\r\n      .then(() => {\r\n        setCards((state) => state.filter((c) => c._id !== card._id));\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Ошибка при удалении карточки\", err.message);\r\n      });\r\n  }\r\n\r\n  function handleAddPlace(card) {\r\n    api\r\n      .addNewCard(card)\r\n      .then((newCard) => {\r\n        setCards((cards) => [newCard, ...cards]);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Ошибка при загрузке нового места\", err.message);\r\n      });\r\n  }\r\n\r\n  if (loggedIn === null) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className=\"App\">\r\n        <div className=\"page__container\">\r\n          <Switch>\r\n            <Route path=\"/sign-up\">\r\n              {loggedIn && <Redirect to=\"/\" />}\r\n              <Register\r\n                handleRegister={handleRegister}\r\n                loggedIn={loggedIn}\r\n                handleSignIn={handleSignIn}\r\n              />\r\n            </Route>\r\n            <Route path=\"/sign-in\">\r\n              {loggedIn && <Redirect to=\"/\" />}\r\n              <Login handleLogin={handleLogin} handleSignUp={handleSignUp} />\r\n            </Route>\r\n            <ProtectedRoute\r\n              path=\"/\"\r\n              loggedIn={loggedIn}\r\n              component={Main}\r\n              onAddPlace={handleAddPlaceClick}\r\n              onEditProfile={handleEditProfileClick}\r\n              onEditAvatar={handleEditAvatarClick}\r\n              onCardClick={handleCardClick}\r\n              onRemoveCard={handleRemoveCardClick}\r\n              cards={cards}\r\n              isLoading={isLoading}\r\n              onCardLike={handleCardLike}\r\n              onCardDelete={handleCardDelete}\r\n              handleLogout={handleLogout}\r\n              loggedIn={loggedIn}\r\n              email={userData.email}\r\n            ></ProtectedRoute>\r\n          </Switch>\r\n          <Footer />\r\n        </div>\r\n\r\n        <InfoTooltip\r\n          isOpen={isInfoTooltipPopupOpen}\r\n          onClose={closeAllPopups}\r\n          message={message}\r\n        />\r\n        <EditProfilePopup\r\n          isOpen={isEditProfilePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateUser={handleUpdateUser}\r\n        />\r\n        <AddPlacePopup\r\n          isOpen={isAddPlacePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onAddPlace={handleAddPlace}\r\n        />\r\n        <EditAvatarPopup\r\n          isOpen={isEditAvatarPopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateAvatar={handleUpdateAvatar}\r\n        />\r\n        <PopupWithForm\r\n          title=\"Вы уверены?\"\r\n          name=\"delete\"\r\n          submitButtonTitle=\"Да\"\r\n          isOpen={isRemoveCardPopupOpen}\r\n          onClose={closeAllPopups}\r\n        />\r\n        <ImagePopup\r\n          card={selectedCard}\r\n          isOpen={isImagePopupOpen}\r\n          onClose={closeAllPopups}\r\n        />\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}