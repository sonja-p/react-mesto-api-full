{"version":3,"sources":["images/logo.svg","components/Header.jsx","components/Register.jsx","components/InfoTooltip.jsx","components/ProtectedRoute.jsx","components/Login.jsx","contexts/CurrentUserContext.js","components/Card.jsx","components/Main.jsx","components/Footer.jsx","components/PopupWithForm.jsx","components/ImagePopup.jsx","components/EditProfilePopup.jsx","components/EditAvatarPopup.jsx","components/AddPlacePopup.jsx","utils/api.js","utils/auth.js","components/App.jsx","reportWebVitals.js","index.jsx"],"names":["Header","handleClick","buttonName","loggedIn","email","className","src","logo","alt","type","onClick","console","log","defaultProps","undefined","Register","handleRegister","handleSignIn","useState","password","data","setData","handleChange","e","target","name","value","onSubmit","preventDefault","id","placeholder","onChange","required","autoComplete","to","InfoTooltip","isOpen","onClose","message","text","ProtectedRoute","Component","component","props","Login","handleLogin","handleSignUp","CurrentUserContext","React","createContext","Card","owner","likes","link","onCardClick","onCardDelete","onCardLike","currentUser","useContext","isOwn","_id","cardDeleteButtonClassName","isLiked","some","i","cardLikeButtonClassName","length","Main","onEditProfile","onAddPlace","onEditAvatar","cards","handleLogout","avatar","about","map","card","Footer","Date","getFullYear","PopupWithForm","title","children","submitButtonTitle","ImagePopup","EditProfilePopup","onUpdateUser","setName","description","setDescription","useEffect","minLength","maxLength","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","current","ref","AddPlacePopup","setLink","api","options","_parseResponse","res","ok","json","Promise","reject","Error","status","this","_url","baseUrl","fetch","credentials","then","method","headers","body","JSON","stringify","inputData","auth","_checkResponse","response","register","logout","getContent","App","setCurrentUser","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isRemoveCardPopupOpen","setIsRemoveCardPopupOpen","isInfoTooltipPopupOpen","setIsInfoTooltipPopupOpen","selectedCard","setSelectedCard","isImagePopupOpen","setIsImagePopupOpen","setLoggedIn","userData","setUserData","setMessage","setCards","history","useHistory","handleError","error","push","catch","getUserInfo","user","err","closeAllPopups","getInitialCards","reverse","Provider","path","userEmail","authorize","onRemoveCard","deleteLike","addLike","newCard","state","c","handleDeleteCard","filter","newProfileData","setUserInfo","addNewCard","allCards","setUserAvatar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.adf32907.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.5f3664ca.svg\";","/* eslint-disable jsx-a11y/control-has-associated-label */\r\n/* eslint-disable no-console */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport logo from '../images/logo.svg';\r\n\r\nfunction Header({\r\n  handleClick, buttonName, loggedIn, email,\r\n}) {\r\n  return (\r\n    <header className=\"header page__header\">\r\n\r\n      <img src={logo} alt=\"Логотип Место Россия\" className=\"header__logo\" />\r\n      <div className=\"header__container\">\r\n        {loggedIn && <p className=\"header__email\">{email}</p>}\r\n        <button type=\"button\" onClick={handleClick} className=\"button header__button\">\r\n          {buttonName}\r\n        </button>\r\n      </div>\r\n      <button type=\"button\" onClick={() => console.log('navbar')} className=\"button header__menu\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  handleClick: PropTypes.func.isRequired,\r\n  buttonName: PropTypes.string.isRequired,\r\n  loggedIn: PropTypes.bool,\r\n  // eslint-disable-next-line react/require-default-props\r\n  email: PropTypes.string,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  loggedIn: undefined,\r\n};\r\n\r\nexport default Header;\r\n","import { Link } from 'react-router-dom';\r\nimport { useState, React } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Header from './Header';\r\n\r\nconst Register = ({ handleRegister, loggedIn, handleSignIn }) => {\r\n  const [data, setData] = useState({\r\n    password: '',\r\n    email: '',\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setData({\r\n      ...data,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { password, email } = data;\r\n    handleRegister({ password, email });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        handleClick={handleSignIn}\r\n        buttonName=\"Войти\"\r\n        loggedIn={loggedIn}\r\n      />\r\n      <div className=\"register page__register\">\r\n        <h2 className=\"register__title\">Регистрация</h2>\r\n        <form className=\"register__form\" onSubmit={handleSubmit}>\r\n          <input\r\n            className=\"register__input\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            onChange={handleChange}\r\n            value={data.email || ''}\r\n            required\r\n          />\r\n          <input\r\n            className=\"register__input\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Пароль\"\r\n            onChange={handleChange}\r\n            value={data.password || ''}\r\n            autoComplete=\"on\"\r\n            required\r\n          />\r\n          <button className=\"button register__button\" type=\"submit\">\r\n            Зарегистрироваться\r\n          </button>\r\n          <div className=\"register__signin\">\r\n            <p>Уже зарегистрированы?</p>\r\n            <Link to=\"login\" className=\"register__login-link\">\r\n              Войти\r\n            </Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nRegister.propTypes = {\r\n  handleRegister: PropTypes.func.isRequired,\r\n  loggedIn: PropTypes.bool.isRequired,\r\n  handleSignIn: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Register;\r\n","/* eslint-disable jsx-a11y/control-has-associated-label */\r\nimport { React } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction InfoTooltip({ isOpen, onClose, message }) {\r\n  return (\r\n    <section className={`popup ${isOpen && 'popup_opened'}`}>\r\n      <div className=\"popup__container\">\r\n        <div\r\n          className={`popup__tooltip-icon popup__tooltip-icon_type_${message.type}`}\r\n        />\r\n        <h2 className=\"popup__title popup__title_padding-bottom_min popup__title_align_center\">\r\n          {message.text}\r\n        </h2>\r\n        <button\r\n          onClick={onClose}\r\n          className=\"button button_type_close\"\r\n          type=\"button\"\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nInfoTooltip.propTypes = {\r\n  isOpen: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  // eslint-disable-next-line react/forbid-prop-types\r\n  message: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default InfoTooltip;\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\n/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ component: Component, ...props }) => (\r\n  <Route>\r\n    {() => (props.loggedIn ? <Component {...props} /> : <Redirect to=\"./sign-in\" />)}\r\n  </Route>\r\n);\r\n\r\nexport default ProtectedRoute;\r\n","import { useState, React } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Header from './Header';\r\n\r\nconst Login = ({ handleLogin, handleSignUp }) => {\r\n  const [data, setData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setData({\r\n      ...data,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!data.email || !data.password) {\r\n      return;\r\n    }\r\n    const { password, email } = data;\r\n    handleLogin({ password, email });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header handleClick={handleSignUp} buttonName=\"Регистрация\" />\r\n      <div className=\"register page__register\">\r\n        <h2 className=\"register__title\">Вход</h2>\r\n        <form className=\"register__form\" onSubmit={handleSubmit}>\r\n          <input\r\n            className=\"register__input\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={data.email || ''}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <input\r\n            className=\"register__input\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Пароль\"\r\n            value={data.password || ''}\r\n            onChange={handleChange}\r\n            autoComplete=\"on\"\r\n            required\r\n          />\r\n          <button className=\"button register__button\" type=\"submit\">\r\n            Войти\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  handleLogin: PropTypes.func.isRequired,\r\n  handleSignUp: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\n\r\nconst CurrentUserContext = React.createContext();\r\nexport default CurrentUserContext;\r\n","/* eslint-disable jsx-a11y/control-has-associated-label */\r\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\nimport { useContext, React } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\n\r\nfunction Card(props) {\r\n  const {\r\n    owner, likes, link, name, onCardClick, onCardDelete, onCardLike,\r\n  } = props;\r\n  const currentUser = useContext(CurrentUserContext);\r\n  const isOwn = owner === currentUser._id;\r\n\r\n  const cardDeleteButtonClassName = `button ${\r\n    isOwn ? 'button_type_delete-card' : 'button_type_delete-card_disable'\r\n  }`;\r\n\r\n  const isLiked = likes.some((i) => i === currentUser._id);\r\n\r\n  const cardLikeButtonClassName = `button ${\r\n    isLiked ? 'button_type_like_active' : 'button_type_like'\r\n  }`;\r\n\r\n  function handleClick() {\r\n    onCardClick(props);\r\n  }\r\n\r\n  function handleDeleteClick() {\r\n    onCardDelete(props);\r\n  }\r\n\r\n  function handleLikeClick() {\r\n    onCardLike(props);\r\n  }\r\n\r\n  return (\r\n    <li className=\"element\">\r\n      <img\r\n        src={link}\r\n        alt={name}\r\n        className=\"element__image\"\r\n        onClick={handleClick}\r\n      />\r\n      <h3 className=\"element__title\">{name}</h3>\r\n      <button\r\n        className={cardLikeButtonClassName}\r\n        type=\"button\"\r\n        onClick={handleLikeClick}\r\n      />\r\n      <h3 className=\"element__likes\">{likes.length}</h3>\r\n      <button\r\n        className={cardDeleteButtonClassName}\r\n        type=\"button\"\r\n        onClick={handleDeleteClick}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nCard.propTypes = {\r\n  owner: PropTypes.string.isRequired,\r\n  likes: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  link: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onCardClick: PropTypes.func.isRequired,\r\n  onCardDelete: PropTypes.func.isRequired,\r\n  onCardLike: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Card;\r\n","/* eslint-disable jsx-a11y/control-has-associated-label */\r\nimport { useContext, React } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Card from './Card';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\nimport Header from './Header';\r\n\r\nfunction Main({\r\n  onEditProfile,\r\n  onAddPlace,\r\n  onEditAvatar,\r\n  onCardClick,\r\n  cards,\r\n  onCardLike,\r\n  onCardDelete,\r\n  handleLogout,\r\n  loggedIn,\r\n  email,\r\n}) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        handleClick={handleLogout}\r\n        buttonName=\"Выйти\"\r\n        loggedIn={loggedIn}\r\n        email={email}\r\n      />\r\n      <main className=\"content page__content\">\r\n        <section className=\"profile\">\r\n          <div className=\"profile__avatar-container\">\r\n            <img\r\n              className=\"profile__avatar\"\r\n              src={currentUser.avatar}\r\n              alt=\"Аватар пользователя\"\r\n            />\r\n            <button\r\n              onClick={onEditAvatar}\r\n              className=\"button button_type_change-avatar\"\r\n              type=\"button\"\r\n            />\r\n          </div>\r\n          <div className=\"profile__info\">\r\n            <div className=\"profile__name-section\">\r\n              <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n              <button\r\n                onClick={onEditProfile}\r\n                className=\"button button_type_edit-profile\"\r\n                type=\"button\"\r\n              />\r\n            </div>\r\n            <h2 className=\"profile__description\">{currentUser.about}</h2>\r\n          </div>\r\n          <button\r\n            onClick={onAddPlace}\r\n            className=\"button button_type_add-card\"\r\n            type=\"button\"\r\n          />\r\n        </section>\r\n        <section className=\"elements\">\r\n          <ul className=\"elements__list\">\r\n            {\r\n              cards.map((card) => (\r\n                <Card\r\n                  key={card._id}\r\n                  // eslint-disable-next-line react/jsx-props-no-spreading\r\n                  {...card}\r\n                  onCardClick={onCardClick}\r\n                  onCardLike={onCardLike}\r\n                  onCardDelete={onCardDelete}\r\n                />\r\n              ))\r\n            }\r\n          </ul>\r\n        </section>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nMain.propTypes = {\r\n  onEditProfile: PropTypes.func.isRequired,\r\n  onAddPlace: PropTypes.func.isRequired,\r\n  onEditAvatar: PropTypes.func.isRequired,\r\n  onCardClick: PropTypes.func.isRequired,\r\n  cards: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onCardLike: PropTypes.func.isRequired,\r\n  onCardDelete: PropTypes.func.isRequired,\r\n  handleLogout: PropTypes.func.isRequired,\r\n  loggedIn: PropTypes.bool.isRequired,\r\n  email: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer page__footer\">\r\n      <p className=\"footer__copyright\">\r\n        &copy;\r\n        {new Date().getFullYear()}\r\n        {' '}\r\n        Mesto Russia\r\n      </p>\r\n    </footer>\r\n  );\r\n}\r\nexport default Footer;\r\n","/* eslint-disable jsx-a11y/control-has-associated-label */\r\nimport { React } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction PopupWithForm({\r\n  name,\r\n  title,\r\n  children,\r\n  submitButtonTitle,\r\n  isOpen,\r\n  onClose,\r\n  onSubmit,\r\n}) {\r\n  return (\r\n    <section className={`popup ${isOpen && 'popup_opened'}`}>\r\n      <form\r\n        className=\"popup__container\"\r\n        name={name}\r\n        onSubmit={onSubmit}\r\n      >\r\n        <h2 className=\"popup__title\">{title}</h2>\r\n        <>{children}</>\r\n        <button\r\n          onClick={onClose}\r\n          className=\"button button_type_close\"\r\n          type=\"button\"\r\n        />\r\n        <button className=\"button popup__save-button\" type=\"submit\">\r\n          {submitButtonTitle}\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nPopupWithForm.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  // eslint-disable-next-line react/forbid-prop-types\r\n  children: PropTypes.array,\r\n  submitButtonTitle: PropTypes.string.isRequired,\r\n  isOpen: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nPopupWithForm.defaultProps = {\r\n  children: undefined,\r\n  onSubmit: undefined,\r\n};\r\n\r\nexport default PopupWithForm;\r\n","/* eslint-disable jsx-a11y/control-has-associated-label */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ImagePopup({ card, onClose, isOpen }) {\r\n  return (\r\n    <section className={`popup popup_type_view ${isOpen && 'popup_opened'}`}>\r\n      <div className=\"popup__view\">\r\n        <img\r\n          src={card.link}\r\n          alt={`увеличенное изображение ${card.name}`}\r\n          className=\"popup__image\"\r\n        />\r\n        <h3 className=\"popup__image-title\">{card.name}</h3>\r\n        <button\r\n          onClick={onClose}\r\n          className=\"button button_type_close\"\r\n          type=\"button\"\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nImagePopup.propTypes = {\r\n  card: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    link: PropTypes.string,\r\n  }).isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  isOpen: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default ImagePopup;\r\n","import {\r\n  useState, useContext, useEffect, React,\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser, isOpen]);\r\n\r\n  function handleNameChange(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  function handleDescriptionChange(e) {\r\n    setDescription(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onUpdateUser({\r\n      name,\r\n      about: description,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title=\"Редактировать профиль\"\r\n      name=\"edit-profile\"\r\n      submitButtonTitle=\"Сохранить\"\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input\r\n        className=\"popup__input\"\r\n        onChange={handleNameChange}\r\n        id=\"profile-name\"\r\n        name=\"profile-name\"\r\n        type=\"text\"\r\n        value={name || ''}\r\n        minLength=\"2\"\r\n        maxLength=\"40\"\r\n        required\r\n      />\r\n      <span className=\"profile-name-error popup__input-error\" />\r\n      <input\r\n        className=\"popup__input\"\r\n        onChange={handleDescriptionChange}\r\n        id=\"description\"\r\n        name=\"description\"\r\n        type=\"text\"\r\n        value={description || ''}\r\n        minLength=\"2\"\r\n        maxLength=\"200\"\r\n        required\r\n      />\r\n      <span className=\"description-error popup__input-error\" />\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nEditProfilePopup.propTypes = {\r\n  isOpen: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  onUpdateUser: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default EditProfilePopup;\r\n","import { useRef, React } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar }) {\r\n  const avatarRef = useRef();\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onUpdateAvatar(avatarRef.current.value);\r\n    avatarRef.current.value = '';\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title=\"Обновить аватар\"\r\n      name=\"edit-avatar\"\r\n      submitButtonTitle=\"Сохранить\"\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input\r\n        className=\"popup__input\"\r\n        ref={avatarRef}\r\n        id=\"avatar-link\"\r\n        name=\"avatar-link\"\r\n        type=\"url\"\r\n        placeholder=\"Ссылка на картинку\"\r\n        required\r\n      />\r\n      <span className=\"avatar-link-error popup__input-error\" />\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nEditAvatarPopup.propTypes = {\r\n  isOpen: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  onUpdateAvatar: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default EditAvatarPopup;\r\n","import { useState, React } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace }) {\r\n  const [name, setName] = useState('');\r\n  const [link, setLink] = useState('');\r\n\r\n  function handleNameChange(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  function handleLinkChange(e) {\r\n    setLink(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    onAddPlace({\r\n      name,\r\n      link,\r\n    });\r\n\r\n    setName('');\r\n    setLink('');\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title=\"Новое место\"\r\n      name=\"add-place\"\r\n      submitButtonTitle=\"Создать\"\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input\r\n        className=\"popup__input\"\r\n        id=\"image-name\"\r\n        name=\"image-name\"\r\n        type=\"text\"\r\n        onChange={handleNameChange}\r\n        value={name}\r\n        placeholder=\"Название\"\r\n        minLength=\"2\"\r\n        maxLength=\"30\"\r\n        required\r\n      />\r\n      <span className=\"image-name-error popup__input-error\" />\r\n      <input\r\n        className=\"popup__input\"\r\n        id=\"image-link\"\r\n        name=\"image-link\"\r\n        type=\"url\"\r\n        onChange={handleLinkChange}\r\n        value={link}\r\n        placeholder=\"Ссылка на картинку\"\r\n        required\r\n      />\r\n      <span className=\"image-link-error popup__input-error\" />\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nAddPlacePopup.propTypes = {\r\n  isOpen: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  onAddPlace: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddPlacePopup;\r\n","class Api {\r\n  constructor(options) {\r\n    this._url = options.baseUrl;\r\n  }\r\n\r\n  _parseResponse = (res) => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(new Error(`Ошибка: ${res.status}`));\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this._url}/users/me`, {\r\n      credentials: 'include',\r\n    })\r\n      .then((res) => this._parseResponse(res));\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this._url}/cards`, {\r\n      credentials: 'include',\r\n    })\r\n      .then((res) => this._parseResponse(res));\r\n  }\r\n\r\n  setUserInfo(data) {\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: 'PATCH',\r\n      credentials: 'include',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      // в теле — JSON с двумя свойствами — name и about.\r\n      // Значениями этих свойств должны быть обновлённые данные пользователя\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => this._parseResponse(res));\r\n  }\r\n\r\n  addNewCard(inputData) {\r\n    return fetch(`${this._url}/cards`, {\r\n      method: 'POST',\r\n      credentials: 'include',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        name: inputData.name,\r\n        link: inputData.link,\r\n      }),\r\n    })\r\n      .then((res) => this._parseResponse(res));\r\n  }\r\n\r\n  getCardLikes() {\r\n    return fetch(`${this._url}/cards`, {\r\n      credentials: 'include',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        likes: [],\r\n      }),\r\n    })\r\n      .then((res) => this._parseResponse(res));\r\n  }\r\n\r\n  handleDeleteCard(id) {\r\n    // Вместо cardId в URL нужно подставить свойство _id соответствующей карточки.\r\n    return fetch(`${this._url}/cards/${id}`, {\r\n      method: 'DELETE',\r\n      credentials: 'include',\r\n    })\r\n      .then((res) => this._parseResponse(res));\r\n  }\r\n\r\n  addLike(id) {\r\n    // Вместо cardId в URL нужно подставить свойство _id соответствующей карточки.\r\n    return fetch(`${this._url}/cards/likes/${id}`, {\r\n      method: 'PUT',\r\n      credentials: 'include',\r\n    })\r\n      .then((res) => this._parseResponse(res));\r\n  }\r\n\r\n  deleteLike(id) {\r\n    return fetch(`${this._url}/cards/likes/${id}`, {\r\n      method: 'DELETE',\r\n      credentials: 'include',\r\n    })\r\n      .then((res) => this._parseResponse(res));\r\n  }\r\n\r\n  setUserAvatar(link) {\r\n    return fetch(`${this._url}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      credentials: 'include',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: `${link}`,\r\n      }),\r\n    })\r\n      .then((res) => this._parseResponse(res));\r\n  }\r\n}\r\n\r\nconst options = {\r\n  baseUrl: 'https://api.puolukka.nomoredomains.rocks',\r\n};\r\n\r\nconst api = new Api(options);\r\n\r\nexport default api;\r\n","class Auth {\r\n  constructor(options) {\r\n    this._url = options.baseUrl;\r\n  }\r\n\r\n  _checkResponse = (response) => (response.ok\r\n    ? response.json()\r\n    : Promise.reject(new Error(`Ошибка: ${response.status}`)));\r\n\r\n  register = (password, email) => fetch(`${this._url}/signup`, {\r\n    method: 'POST',\r\n    credentials: 'include',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      password: `${password}`,\r\n      email: `${email}`,\r\n    }),\r\n  }).then((response) => this._checkResponse(response))\r\n\r\n  authorize(password, email) {\r\n    return fetch(`${this._url}/signin`, {\r\n      method: 'POST',\r\n      credentials: 'include',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        password: `${password}`,\r\n        email: `${email}`,\r\n      }),\r\n    }).then((response) => this._checkResponse(response));\r\n  }\r\n\r\n  logout = () => fetch(`${this._url}/logout`, {\r\n    credentials: 'include',\r\n  }).then((response) => this._checkResponse(response))\r\n\r\n  getContent = () => fetch(`${this._url}/users/me`, {\r\n    method: 'GET',\r\n    credentials: 'include',\r\n  }).then((response) => this._checkResponse(response))\r\n}\r\n\r\nconst options = {\r\n  baseUrl: 'https://api.puolukka.nomoredomains.rocks',\r\n};\r\n\r\nconst auth = new Auth(options);\r\n\r\nexport default auth;\r\n","/* eslint-disable no-undef */\r\n/* eslint-disable no-console */\r\nimport { React, useState, useEffect } from 'react';\r\nimport {\r\n  Route, Switch, useHistory, Redirect,\r\n} from 'react-router-dom';\r\nimport Register from './Register';\r\nimport InfoTooltip from './InfoTooltip';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport Login from './Login';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport ImagePopup from './ImagePopup';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport api from '../utils/api';\r\nimport auth from '../utils/auth';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\n\r\nfunction App() {\r\n  const [currentUser, setCurrentUser] = useState({\r\n    name: '',\r\n    about: '',\r\n    avatar: '',\r\n    _id: '',\r\n  });\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\r\n  const [isRemoveCardPopupOpen, setIsRemoveCardPopupOpen] = useState(false);\r\n  const [isInfoTooltipPopupOpen, setIsInfoTooltipPopupOpen] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState({});\r\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [userData, setUserData] = useState({\r\n    _id: '',\r\n    email: '',\r\n  });\r\n  const [message, setMessage] = useState({ text: '', type: '' });\r\n\r\n  const [cards, setCards] = useState([]);\r\n\r\n  const history = useHistory();\r\n\r\n  const handleError = (error) => {\r\n    console.error(error);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      history.push('/');\r\n    }\r\n  }, [loggedIn]);\r\n\r\n  const handleRegister = ({ password, email }) => {\r\n    auth\r\n      .register(password, email)\r\n      .then((data) => {\r\n        const { _id, userEmail } = data;\r\n        setUserData({ _id, userEmail });\r\n\r\n        setIsInfoTooltipPopupOpen(true);\r\n        setMessage({\r\n          text: 'Вы успешно зарегистрировались!',\r\n          type: 'success',\r\n        });\r\n      })\r\n      .then(() => history.push('/'))\r\n      .catch((error) => {\r\n        handleError(error);\r\n        if (error) {\r\n          setIsInfoTooltipPopupOpen(true);\r\n          setMessage({\r\n            text: 'Что-то пошло не так! Попробуйте ещё раз.',\r\n            type: 'fail',\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleLogin = ({ password, email }) => {\r\n    auth\r\n      .authorize(password, email)\r\n      .then(() => {\r\n        setLoggedIn(true);\r\n        setUserData({ email });\r\n      })\r\n      .catch(handleError);\r\n  };\r\n\r\n  const handleSignIn = () => {\r\n    history.push('/sign-in');\r\n  };\r\n\r\n  const handleSignUp = () => {\r\n    history.push('/sign-up');\r\n  };\r\n\r\n  const checkToken = () => {\r\n    auth\r\n      .getContent()\r\n      .then((data) => {\r\n        const { _id, email } = data;\r\n        setUserData({ _id, email });\r\n        setLoggedIn(true);\r\n      })\r\n      .catch(handleError);\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkToken();\r\n  }, [loggedIn]);\r\n\r\n  useEffect(() => {\r\n    api\r\n      .getUserInfo()\r\n      .then((user) => {\r\n        setCurrentUser(user);\r\n      })\r\n      .catch((err) => {\r\n        console.log('Ошибка при загрузке информации пользователя', err.message);\r\n      });\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    auth\r\n      .logout()\r\n      .then(() => {\r\n        history.push('/sign-in');\r\n        setLoggedIn(false);\r\n      });\r\n  };\r\n\r\n  const handleEditAvatarClick = () => {\r\n    setIsEditAvatarPopupOpen(true);\r\n  };\r\n\r\n  const handleEditProfileClick = () => {\r\n    setIsEditProfilePopupOpen(true);\r\n  };\r\n\r\n  const handleAddPlaceClick = () => {\r\n    setIsAddPlacePopupOpen(true);\r\n  };\r\n\r\n  const handleRemoveCardClick = () => {\r\n    setIsRemoveCardPopupOpen(true);\r\n  };\r\n\r\n  const closeAllPopups = () => {\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsRemoveCardPopupOpen(false);\r\n    setIsImagePopupOpen(false);\r\n    setIsInfoTooltipPopupOpen(false);\r\n  };\r\n\r\n  const handleCardClick = (card) => {\r\n    setSelectedCard(card);\r\n    setIsImagePopupOpen(true);\r\n  };\r\n\r\n  const handleUpdateUser = (newProfileData) => {\r\n    api\r\n      .setUserInfo(newProfileData)\r\n      .then((user) => {\r\n        setCurrentUser(user);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(\r\n          'Ошибка при загрузке новой информации пользователя',\r\n          err.message,\r\n        );\r\n      });\r\n  };\r\n\r\n  const handleUpdateAvatar = (link) => {\r\n    api\r\n      .setUserAvatar(link)\r\n      .then((user) => {\r\n        setCurrentUser(user);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log('Ошибка при загрузке аватара пользователя', err.message);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    api\r\n      .getInitialCards()\r\n      .then((data) => {\r\n        setCards(data.reverse());\r\n      })\r\n      .catch((err) => {\r\n        console.log('Ошибка при загрузке карточек', err.message);\r\n      });\r\n  }, []);\r\n\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some((i) => i === currentUser._id);\r\n\r\n    (!isLiked ? api.addLike(card._id) : api.deleteLike(card._id))\r\n      .then((newCard) => {\r\n        setCards((state) => state.map((c) => (c._id === card._id ? newCard : c)));\r\n      })\r\n      .catch((err) => {\r\n        console.log('Ошибка при постановке лайка', err.message);\r\n      });\r\n  }\r\n\r\n  function handleCardDelete(card) {\r\n    api\r\n      .handleDeleteCard(card._id)\r\n      .then(() => {\r\n        setCards((state) => state.filter((c) => c._id !== card._id));\r\n      })\r\n      .catch((err) => {\r\n        console.log('Ошибка при удалении карточки', err.message);\r\n      });\r\n  }\r\n\r\n  function handleAddPlace(card) {\r\n    api\r\n      .addNewCard(card)\r\n      .then((newCard) => {\r\n        setCards((allCards) => [newCard, ...allCards]);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log('Ошибка при загрузке нового места', err.message);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className=\"App\">\r\n        <div className=\"page__container\">\r\n          <Switch>\r\n            <Route path=\"/sign-up\">\r\n              {loggedIn && <Redirect to=\"/\" />}\r\n              <Register\r\n                handleRegister={handleRegister}\r\n                loggedIn={loggedIn}\r\n                handleSignIn={handleSignIn}\r\n              />\r\n            </Route>\r\n            <Route path=\"/sign-in\">\r\n              {loggedIn && <Redirect to=\"/\" />}\r\n              <Login handleLogin={handleLogin} handleSignUp={handleSignUp} />\r\n            </Route>\r\n            <ProtectedRoute\r\n              path=\"/\"\r\n              loggedIn={loggedIn}\r\n              component={Main}\r\n              onAddPlace={handleAddPlaceClick}\r\n              onEditProfile={handleEditProfileClick}\r\n              onEditAvatar={handleEditAvatarClick}\r\n              onCardClick={handleCardClick}\r\n              onRemoveCard={handleRemoveCardClick}\r\n              cards={cards}\r\n              onCardLike={handleCardLike}\r\n              onCardDelete={handleCardDelete}\r\n              handleLogout={handleLogout}\r\n              // eslint-disable-next-line react/jsx-no-duplicate-props\r\n              loggedIn={loggedIn}\r\n              email={userData.email}\r\n            />\r\n          </Switch>\r\n          <Footer />\r\n        </div>\r\n\r\n        <InfoTooltip\r\n          isOpen={isInfoTooltipPopupOpen}\r\n          onClose={closeAllPopups}\r\n          message={message}\r\n        />\r\n        <EditProfilePopup\r\n          isOpen={isEditProfilePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateUser={handleUpdateUser}\r\n        />\r\n        <AddPlacePopup\r\n          isOpen={isAddPlacePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onAddPlace={handleAddPlace}\r\n        />\r\n        <EditAvatarPopup\r\n          isOpen={isEditAvatarPopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateAvatar={handleUpdateAvatar}\r\n        />\r\n        <PopupWithForm\r\n          title=\"Вы уверены?\"\r\n          name=\"delete\"\r\n          submitButtonTitle=\"Да\"\r\n          isOpen={isRemoveCardPopupOpen}\r\n          onClose={closeAllPopups}\r\n        />\r\n        <ImagePopup\r\n          card={selectedCard}\r\n          isOpen={isImagePopupOpen}\r\n          onClose={closeAllPopups}\r\n        />\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n      getCLS, getFID, getFCP, getLCP, getTTFB,\r\n    }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/* eslint-disable no-undef */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}